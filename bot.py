from telegram import Update, InputFile
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)
import asyncio

# ‚úÖ –£–∫–∞–∂–∏ —Å–≤–æ–∏ –∫–æ–¥—ã –∏ —Ñ–∞–π–ª
VALID_CODES = ["GIFT2025", "MEDITA25"]
VOICE_FILE_PATH = "meditation.ogg.mp3"  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –º–µ–¥–∏—Ç–∞—Ü–∏–µ–π
DELAY_SECONDS = 10  # –ó–∞–¥–µ—Ä–∂–∫–∞: 3600 —Å–µ–∫—É–Ω–¥ = 1 —á–∞—Å

# –•—Ä–∞–Ω–∏–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_states = {}

# –ü—Ä–∏ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_states[user_id] = "awaiting_code"
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç üëã\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏—é, –≤–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∫–æ–¥:"
    )

# –ü—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip()

    if user_states.get(user_id) != "awaiting_code":
        return

    if text in VALID_CODES:
        user_states[user_id] = "code_valid"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ
        with open(VOICE_FILE_PATH, "rb") as audio:
            await update.message.reply_audio(audio=InputFile(audio))
        await update.message.reply_text("–í–æ—Ç —Ç–≤–æ—è –º–µ–¥–∏—Ç–∞—Ü–∏—è üéß")

        # –ß–µ—Ä–µ–∑ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Ä–æ–∫–∞
        asyncio.create_task(send_lesson_offer(context, user_id))
    else:
        await update.message.reply_text("–ö–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑:")

# –ß–µ—Ä–µ–∑ –≤—Ä–µ–º—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫
async def send_lesson_offer(context: ContextTypes.DEFAULT_TYPE, user_id: int):
    await asyncio.sleep(DELAY_SECONDS)
    await context.bot.send_message(
        chat_id=user_id,
        text="–ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –º–µ–¥–∏—Ç–∞—Ü–∏—è üôè\n\n–ì–æ—Ç–æ–≤(-–∞) –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫? –ù–∞–ø–∏—à–∏ –≤ –æ—Ç–≤–µ—Ç ‚Äî –∏ –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è üòä"
    )

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    app = ApplicationBuilder().token("8474008550:AAHQxRMwFj9Y6NecDTXMUg0vaEBM-2h2J00").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
